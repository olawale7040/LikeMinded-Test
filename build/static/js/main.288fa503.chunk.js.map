{"version":3,"sources":["constants/index.js","assets/img/eye_open.svg","assets/img/eye_close.svg","pages/RegistrationPage/FormComponent.js","pages/RegistrationPage/index.js","routes/index.js","components/Header.js","App.js","index.js"],"names":["userRoles","name","value","FormComponent","formik","useState","ispwdVisible","setIsPwdVisible","className","onSubmit","handleSubmit","htmlFor","type","placeholder","id","onChange","handleChange","onBlur","handleBlur","values","email","touched","errors","password","src","eyeOpen","eyeClose","alt","onClick","userRole","map","item","RegistrationPage","useFormik","initialValues","validationSchema","Yup","required","when","is","then","min","matches","otherwise","alert","JSON","stringify","routes","path","element","Header","App","routing","useRoutes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.288fa503.chunk.js","sourcesContent":["export const userRoles = [\n  { name: \"User\", value: \"user\" },\n  { name: \"Mentor\", value: \"mentor\" },\n  { name: \"Author\", value: \"author\" },\n];\n","export default __webpack_public_path__ + \"static/media/eye_open.60377344.svg\";","export default __webpack_public_path__ + \"static/media/eye_close.167a5f11.svg\";","import { useState } from \"react\";\nimport { userRoles } from \"src/constants\";\nimport eyeOpen from \"src/assets/img/eye_open.svg\";\nimport eyeClose from \"src/assets/img/eye_close.svg\";\nconst FormComponent = ({ formik }) => {\n  const [ispwdVisible, setIsPwdVisible] = useState(false);\n  return (\n    <div className=\"textbox-wrapper\" data-testid=\"form-wrapper\">\n      <form onSubmit={formik.handleSubmit} data-testid=\"form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"Email\"\n            name=\"email\"\n            id=\"email\"\n            data-testid=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          <div>\n            {formik.touched.email && formik.errors.email ? (\n              <div className=\"form-error\">{formik.errors.email}</div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <div className=\"password-field\">\n            <input\n              className=\"form-control\"\n              placeholder=\"password\"\n              name=\"password\"\n              type={!ispwdVisible ? \"password\" : \"text\"}\n              data-testid=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n            />\n            <img\n              src={ispwdVisible ? eyeOpen : eyeClose}\n              alt=\"eye\"\n              onClick={() => setIsPwdVisible(!ispwdVisible)}\n            />\n          </div>\n          <div>\n            {formik.touched.password && formik.errors.password ? (\n              <div className=\"form-error\">{formik.errors.password}</div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"userRole\">User Role</label>\n          <select\n            name=\"userRole\"\n            id=\"userRole\"\n            className=\"select-cont\"\n            data-testid=\"userRole\"\n            value={formik.values.userRole}\n            onChange={formik.handleChange}\n          >\n            <option value=\"\">-Select-</option>\n            {userRoles.map((item) => (\n              <option value={item.value} key={item.value}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n          <div>\n            {formik.touched.userRole && formik.errors.userRole ? (\n              <div className=\"form-error\">{formik.errors.userRole}</div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"btn-container\">\n          <button className=\"btn-primary\" data-testid=\"submitBtn\" type=\"submit\">\n            Create account\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default FormComponent;\n","import { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormComponent from \"./FormComponent\";\nconst RegistrationPage = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      userRole: \"\",\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      userRole: Yup.string().required(\"Required\"),\n      password: Yup.string().when(\"userRole\", {\n        is: (userRole) => userRole === \"mentor\",\n        then: Yup.string()\n          .required(\"Field is required\")\n          .required(\"Required\")\n          .min(8, \"Must be 8 characters or more\")\n          .matches(/[A-Z]+/, \"One uppercase character\")\n          .matches(/[@$!%*#?&]+/, \"One special character\")\n          .matches(/\\d+/, \"One number\"),\n        otherwise: Yup.string()\n          .required(\"Required\")\n          .min(8, \"Must be 8 characters or more\")\n          .matches(/[A-Z]+/, \"One uppercase character\")\n          .matches(/\\d+/, \"One number\"),\n      }),\n    }),\n\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <main className=\"main-content\">\n      <section className=\"main-section\">\n        <FormComponent formik={formik} />\n      </section>\n    </main>\n  );\n};\nexport default RegistrationPage;\n","import RegistrationPage from \"src/pages/RegistrationPage\";\n\nconst routes = [{ path: \"/\", element: <RegistrationPage /> }];\nexport default routes;\n","const Header = () => {\n  return (\n    <header data-testid=\"app-header\">\n      <nav className=\"navbar\">\n        <div className=\"brand-wrap\">\n          <div className=\"brand-name\" data-testid=\"header-brand-name\">\n            Like Minded\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useRoutes } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport Header from \"src/components/Header\";\n\nconst App = () => {\n  const routing = useRoutes(routes);\n  return (\n    <div>\n      <Header />\n      <>{routing}</>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n// Styles\nimport \"src/assets/styles/main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}